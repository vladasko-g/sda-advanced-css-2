/* 
  first-child 
  only-child
  last-child
  nth-child
  nth-last-child

  first-of-type
  nth-of-type 
      - looks only for tag not other selectors while making the decision
  only-of-type
  last-of-type

  empty
  
  :not(selector, selector)

  ::first-letter
  ::first-line

  ::before
  ::after
  */

.list-item:first-child {
  color: #1f1;
}

/* not working as non is first child */
.list-item2:first-child {
  color: #f11;
}

.list-item:nth-child(3) {
  color: #1ff;
}
.list-item2:nth-last-child(2) {
  color: #ff1;
}

.list-item:only-child {
  color: #11f;
}

.list-item:last-child:not(:only-child) {
  color: #f1f;
}

p:first-of-type {
  color: #b7b;
}

p:nth-of-type(3) {
  color: #7bb;
}

p:nth-of-type(2n)::first-letter {
  text-decoration: line-through;
}

.list-item:empty {
  border: 1px solid #333;
}
.list-item:empty::before {
  content: "â™¥";
}


/* 
  display: flex;
           inline-flex - container behaves like inline
  flex-direction: row! | column | row-reverse | col-reverse
    - of main axis
  flex-wrap: no-wrap | wrap | wrap-reverse
    - new line items may have different heights depending on the row not all rows
  flex-flow: flex-direction flex-wrap
  justify-content: center | space-between | space-around | justify-content | !flex-start
    - where items sit on main axis
  align-items: center | baseline | flex-start | !stretch
    - where items sit on cross axis
  align-content: space-around | center | baseline | flex-start | stretch

  flex: flex-grow flex-shrink flex-basis 
    - if only px flex basis
  flex-grow: number
    - 0 no
  flex-shrink: number | 200px
    - initial size
  flex-basis: 200px |
  align-self
  order: number
    - !0

*/

.flex-container {
  display: flex;
  height: 700px;
  margin: 20px;
  padding: 20px;
  background-color: #dcd;
}

.flex-container ul {
  list-style: none;
}
